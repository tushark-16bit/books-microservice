plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.diffplug.gradle.spotless' version '4.5.1'
}

group = 'com.tk16.microsrevices'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion',"2022.0.1")
    set('resilience4jVersion',"2.0.2")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.' +
            'cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

    implementation 'io.micrometer:micrometer-observation'
    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
    implementation 'io.opentelemetry:opentelemetry-exporter-zipkin'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.okta.spring:okta-spring-boot-starter:3.0.3'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
    java {
        googleJavaFormat()
    }
    sql {
        target 'src/main/resources/**/*.sql' // have to set manually

        dbeaver()  // has its own section below
    }
}
